"""initial migration

Revision ID: 25b200bf18d4
Revises: 
Create Date: 2025-06-17 13:12:50.997281

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '25b200bf18d4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('monster_species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('FIRE', 'WATER', 'GRASS', 'ELECTRIC', 'GROUND', 'ROCK', 'ICE', 'FLYING', 'DARK', 'PSYCHIC', 'STEEL', 'GHOST', 'BUG', 'DRAGON', 'NORMAL', 'FAIRY', name='monster_type', native_enum=False), nullable=True),
    sa.Column('base_hp', sa.Integer(), nullable=True),
    sa.Column('base_attack', sa.Integer(), nullable=True),
    sa.Column('base_defense', sa.Integer(), nullable=True),
    sa.Column('rarity', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'EPIC', 'LEGENDARY', name='rarity_enum', native_enum=False), nullable=True),
    sa.Column('evolution_species_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['evolution_species_id'], ['monster_species.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('money', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('abilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['species_id'], ['monster_species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monster_abilities',
    sa.Column('monster_species_id', sa.Integer(), nullable=False),
    sa.Column('ability', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['monster_species_id'], ['monster_species.id'], ),
    sa.PrimaryKeyConstraint('monster_species_id', 'ability')
    )
    op.create_table('player_achievements',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('player_id', 'achievement_id')
    )
    op.create_table('player_monsters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('current_hp', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['monster_species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('battles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('player_monster_id', sa.Integer(), nullable=True),
    sa.Column('opponent_name', sa.String(), nullable=True),
    sa.Column('outcome', sa.Enum('WIN', 'LOSS', 'DRAW', name='battle_result_enum', native_enum=False), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['player_monster_id'], ['player_monsters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('offered_monster_id', sa.Integer(), nullable=True),
    sa.Column('requested_monster_id', sa.Integer(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['offered_monster_id'], ['player_monsters.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['requested_monster_id'], ['player_monsters.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trades')
    op.drop_table('battles')
    op.drop_table('player_monsters')
    op.drop_table('player_achievements')
    op.drop_table('monster_abilities')
    op.drop_table('abilities')
    op.drop_table('players')
    op.drop_table('monster_species')
    op.drop_table('achievements')
    # ### end Alembic commands ###
